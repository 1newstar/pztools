BAKASQL

a tool written in bash and C that can be used to execute DML against a MySQL database in a somewhat safe manner.

What you get:

- automatic rollback scripts to revert the changes the query will apply
- automatic check for PK and/or index use (avoid locking table scans!!)
- dry run capability (check query and compute rollback statements without modifying the data)
- log of everything executed against the database
- transaction consistency: all queries are run within the same transaction so an all-or-nothing modification is enforced
- last_insert_id and variables are supported (see examples)

Installation notes:

- the system user running this script must have proper grants on the databases, from the host the CGI script runs from
- the script runs under apache httpd, put it in the cgi-bin directory (usually /var/www/cgi-bin) and configure your web server accordingly
- you need to compile the bakautils.c program (gcc -O3 -o bakautils bakautils.c) and place it according to the path at the top of the CGI script.
- place the images from the images folder in your /var/www/html folder
 
WATCH OUT: this is early stage software. Bugs are there. Make sure to always check the rollback code in dry run mode before you run the actual changes.

EXAMPLE USAGE WITH VARIABLES:

set @myvar1 =  (select val from rick.t1 where val=12121 and id = 1021);
set @myvar2 =  (select val from rick.t1 where id = 1385);
set @myvar3 =  (select 666);
insert into t1 (val) values (@myvar1);
insert into t1 (val) values (@last_insert_id), (@myvar2), (@myvar3);

Advanced options:

- speed hacks enables some... speed hacks, at the expense of some features; namely, variables are not substituted, UTF-8 invalid chars are not filtered out, and output will be terse (so it will be harder to locate the row with the error, although still possible)
- periodic commit will commit the transation periodically every N statements, this can be used for very large transactions (eg large number of identical updates) - normally shouldn't be used, as in this case, the all-or-nothing modification is not enforced

 

Feedbacks welcome!
Enjoy
